server:
  port: 8191

spring:
  application:
    name: USER-SERVICE
# will fetch from git USER-SERVICE.yml file
#  datasource:
#    url: jdbc:mysql://localhost:3306/microservices
#    username: root
#    password: root
#    driver-class-name: com.mysql.cj.jdbc.Driver
#
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: true
  config:
    import: configserver:http://localhost:8196

# Spring security configuration to make userservice a client, which will call hotel and rating
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-54760333.okta.com/oauth2/default # from okta
      client:
        registration:
          my-internal-custom-client:
            provider: okta
            authorizationGrantType: client_credentials
            scope: internal # we created in okta
            clientId: 0oadjzmdbtPbaNmX15d7
            clientSecret: V5E5gNVrgdEoIPGuqfC7zxCtTOU2btY7iKHgn3DXuaNBH9rpOyyoWndEA0ys29Eu

        provider:
          okta:
            issuerUri: https://dev-54760333.okta.com/oauth2/default

# profiles:
#   active: prod




## Now we will fetch this from git default file application.properties ,with the help of config server
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8194/eureka

# Resilience4j configurations
# actuator related
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always
# resilience related
resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 2
        timeoutDuration: 2s

## Okta configurations no need of client-id and secret because it's not going to open login page
okta:
  oauth2:
    issuer: https://dev-54760333.okta.com/oauth2/default
    audience: api://default